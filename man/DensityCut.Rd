% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/densitycut.R
\name{DensityCut}
\alias{DensityCut}
\title{The densityCut algorithm}
\usage{
DensityCut(X, K, knn.index, knn.dist, V, D, G, threshold, alpha = 0.9,
  nu = seq(0, 1, by = 0.05), adjust = TRUE, maxit = 50, eps = 1e-05,
  col, show.plot = TRUE, show.tip.label = FALSE, debug = FALSE,
  xlab = TRUE, text = NULL, ...)
}
\arguments{
\item{X}{A data matrix (columns are features and rows are data points)}

\item{K}{A integer to specify the number of neighbours in building the Knn graph.
Default to \eqn{K=\log_2(N)}, where N is the number of data points}

\item{knn.index}{An N*K data matrix for the nearest neighbour indices}

\item{knn.dist}{An N*K data matrix for the nearest neighbour distances}

\item{V}{The initial density vector of length N}

\item{D}{The dimensionality of data}

\item{G}{A sparse Knn graph, reseaved for extension}

\item{threshold}{A number between 0 and 1 specifying the saliency index to cut the tree.
If not specified, it is selecting by stability analysis of the clustering tree}

\item{alpha}{The damping factor between 0 and 1, default to 0.90}

\item{nu}{The saliency index in merging trees, default to \eqn{seq(0.0, 1.0, by=0.05)}}

\item{adjust}{Lotical, whether to ajdust valley height or not}

\item{maxit}{The maximum number of iteration allowed in density refinement, default to 50}

\item{eps}{The threshold in density refinement, default to 1e-5}

\item{col}{A vector of clours}

\item{show.plot}{Logical, whether to draw clustering results}

\item{show.tip.label}{Logical, whether to draw the tip labels of trees}

\item{debug}{Logical, whether to print debug information}

\item{xlab}{Logical, whether to show the xlab}

\item{text}{subplot label}

\item{...}{Reserved for extension}
}
\value{
A list contains the clustering memberships,
the modes of each cluster, and the estimated densities at each point
}
\description{
The densityCut algorithm
}
\examples{
library(mvtnorm)

data(distinct.col)
set.seed(0)

N = 2^12
number.cluster = 64
N = N / number.cluster

i  = j = seq(-3.5, 3.5, by=1)
mu = expand.grid(i, j)
mu = as.matrix(mu)

sigma = matrix(c(1, 0, 0, 1)*0.05, byrow=TRUE, nrow=2)

x = lapply(seq(number.cluster), function(z) rmvnorm(N, mu[z,], sigma))
x = do.call(rbind, x)

label = lapply(1:number.cluster, function(z) rep(z, N))
col = AssignLabelColor(distinct.col, unlist(label))
NeatPlot(x, col=col, pch=4, cex=0.5)

K = ceiling(log2(N * number.cluster))
a = DensityCut(X=x, K=K, alpha=0.85, nu=seq(0.0, 1.0, by=0.05),
               debug=FALSE, show.plot=TRUE,
               col=distinct.col)

col = AssignLabelColor(distinct.col, a$cluster)
NeatPlot(x, col=col, pch=4, cex=0.5)

}
